{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileContainer/Profile/Profile.module.css","components/Profile/ProfileContainer/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileContainer/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileContainer/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileContainer/Profile/Profile.jsx","components/Profile/ProfileContainer/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_EvgConstT430_Source_study_itkamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_EvgConstT430_Source_study_itkamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_EvgConstT430_Source_study_itkamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_EvgConstT430_Source_study_itkamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_EvgConstT430_Source_study_itkamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","React","connect","module","exports","content","MyPost","post","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","className","s","ProfileInfo_ProfileStatusWithHooks","src","photos","large","alt","fullName","aboutMe","contacts","facebook","website","vk","youtube","github","mainLink","Preloader","Post","react","text","likeCounts","maxLength15","maxLength","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","console","log","postElements","posts","map","p","MyPosts_Post_Post","id","values","addPost","newPostText","MyPostsContainer","profilePage","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","store","ProfileApiComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","userId","match","params","authUserId","setUserProfile","getStatus","ProfileContainer_Profile_Profile","assign","profileContainer","compose","withRouter"],"mappings":"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","file":"static/js/2.4dc13e4b.chunk.js","sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to=\"/Login\"/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3gjqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1yEij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPost\":\"MyPosts_MyPost__30b9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1P_vW\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n\r\n    let [editMode, setEditMode] = useState( false );\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                       <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                   <div>\r\n                        <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode}  value={status}/>\r\n                   </div>\r\n\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../../Common/Preloader/Preloader\";\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.large}\r\n                     alt=\"User avatar\"/>\r\n            </div>\r\n            <div>{props.profile.fullName}</div>\r\n            <div>Статус: {props.profile.aboutMe}</div>\r\n            <div>Контакты:</div>\r\n            <div>{props.profile.contacts.facebook}</div>\r\n            <div>{props.profile.contacts.website}</div>\r\n            <div>{props.profile.contacts.vk}</div>\r\n            <div>{props.profile.contacts.youtube}</div>\r\n            <div>{props.profile.contacts.github}</div>\r\n            <div>{props.profile.contacts.mainLink}</div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import * as React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n\r\n            <img src='https://cdn.worldvectorlogo.com/logos/tiktok-logo-2--1.svg'\r\n                 alt=\"User's avatar\"/>\r\n            <span>{props.text}</span>\r\n            <div>Like counts: {props.likeCounts} </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormControls\";\r\n\r\n\r\nfunction MyPosts(props) {\r\n\r\n    console.log(\"RENDER\")\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id} text={p.text} likeCounts={p.likeCounts}/>)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.MyPost}>\r\n            <AddPostFormRedux onSubmit={addPost}/>\r\n            {postElements}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst maxLength15 = maxLength(15);\r\n\r\nconst addPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"newPostText\"}\r\n                    placeholder={\"Enter your post\"}\r\n                    validate={[required, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'post'})(addPostForm)\r\n\r\n\r\nexport default MyPosts;","import {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport React from \"react\";\r\nimport MyPostsContainer from \"../../MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, getStatus, setUserProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"../../../hoc/withRouter\";\r\n\r\n\r\nclass ProfileApiComponent extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match ? this.props.match.params.userId : this.props.authUserId;\r\n        this.props.setUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nlet profileContainer =compose(\r\n    connect(mapStateToProps, {setUserProfile, addPost, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileApiComponent)\r\n\r\n\r\nexport default profileContainer;\r\n\r\n"],"sourceRoot":""}